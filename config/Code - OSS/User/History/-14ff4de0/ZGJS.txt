// Una prueba de ordenamiento
it("Debería ordenar la tabla ascendentemente por fecha", () => {
    cy.visit("/#/salidas");
    cy.wait(1000);
    cy.get("table th").contains("Fecha").click();
    cy.get("table tbody tr td:nth-child(3)").then((dateElements) => {
    const dates = Array.from(dateElements, (el) => new Date(el.innerText));
    const sortedDates = [...dates].sort((a, b) => a - b);
    expect(dates).to.deep.equal(sortedDates);
    });
});

// Una prueba de manejo de zonas horarias y fechas especiales
it("Debería manejar zonas horarias y fechas especiales", () => {
    // Registra una transacción con una fecha especial
    const specialDate = new Date("2023-12-25T10:00:00Z");
    cy.visit("/#/salida");
    cy.get("input").first().type("1");
    cy.contains("Continuar").click();
    cy.get("input[name=patientNumber]").type("8888");
    cy.get("input[name=volunteerName]").type("Voluntario Especial");
    cy.get("input[name=date]").type(specialDate.toISOString());
    cy.contains("Continuar").click();
    cy.wait(1000);

    cy.visit("/#/salidas");
    cy.get('input[placeholder="Buscar"]').type("Voluntario Especial");
    cy.get("table").should("contain", "8888");
    cy.get("table").should("contain", specialDate.toLocaleString());
});
